<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHome.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>