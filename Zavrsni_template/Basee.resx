<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>